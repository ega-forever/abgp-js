!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.PlainStorage=e():t.PlainStorage=e()}(self,(()=>(()=>{"use strict";var t={};return(()=>{var e=t;class s{constructor(){this.db=new Map}async get(t){const e=this.db.get(t);return e?e.cloneObject():null}async save(t){this.db.set(t.hash,t.cloneObject())}async has(t){return this.db.has(t)}async getByTimestamp(t){return[...this.db.values()].filter((e=>e.timestamp===t)).map((t=>t.cloneObject()))}async getAfterTimestamp(t,e,s){return[...this.db.values()].filter((s=>s.timestamp>t||s.timestamp===t&&s.timestampIndex>e)).sort(((t,e)=>t.timestamp>e.timestamp||t.timestamp===e.timestamp&&t.timestampIndex>e.timestampIndex?1:-1)).slice(0,s).map((t=>t.cloneObject()))}async del(t){this.db.delete(t)}}class a{constructor(){this.db=new Map}async get(t){return this.db.get(t)||{timestamp:0,timestampIndex:-1,root:"0",publicKey:t}}async save(t){this.db.set(t.publicKey,t)}}e.default=class{constructor(){this.Record=new s,this.State=new a}}})(),t.default})()));